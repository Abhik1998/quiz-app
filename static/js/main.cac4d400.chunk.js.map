{"version":3,"sources":["assets/images/code.png","constants/numOfQuestions.js","components/Header/index.js","components/Select/index.js","constants/categories.js","constants/countdownTime.js","constants/difficulty.js","constants/questionsType.js","components/Main/index.js","components/Loader/index.js","components/Result/index.js","components/Countdown/index.js","components/Offline/index.js","components/Quiz/index.js","components/App/index.js","api/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","promptEvent","appAccepted","window","addEventListener","e","preventDefault","setState","installApp","bind","assertThisInitialized","_this2","prompt","userChoice","then","result","outcome","_this$state","isAppInstalled","matchMedia","matches","react_default","a","createElement","Menu","stackable","inverted","size","Item","style","color","cursor","position","Button","content","icon","labelPosition","onClick","Component","Select","Dropdown","placeholder","text","options","fluid","selection","onChange","_ref","value","setValue","CATEGORIES","key","NUM_OF_QUESTIONS","i","object","concat","push","DIFFICULTY","QUESTIONS_TYPE","COUNTDOWN_TIME","Main","setCategory","setNumOfQ","setDifficulty","setQType","setTime","category","numOfQ","difficulty","type","time","allFieldsSelected","selectedValues","Container","Segment","raised","Group","divided","Image","src","codeImg","Content","Divider","Meta","components_Select","Extra","primary","disabled","startQuiz","Loader","Message","Icon","name","loading","Result","userScore","Number","correctAnswers","totalQuestions","toFixed","timeConverter","hours","Math","floor","slice","minutes","seconds","_this$props","takenTime","retakeQuiz","backToHome","totalTime","timerTime","timeTakes","remarks","grade","calcGrade","parseInt","Label","attached","elements_Header_Header","as","textAlign","block","marginTop","marginRight","marginBottom","Countdown","countdownTime","timerStart","timer","setInterval","newTime","clearInterval","Swal","fire","title","onClose","timesUp","startTimer","timeAmount","basic","floated","Popup","trigger","active","Offline","Quiz","quizData","isLoading","questionIndex","userSlectedAns","quizIsCompleted","isOffline","undefined","getRandomNumber","setData","handleItemClick","handleNext","renderResult","startNewQuiz","resolveError","API","fetch","respone","json","setTimeout","results","catch","error","navigator","onLine","min","ceil","max","random","_this3","length","html","outPut","toConsumableArray","incorrect_answers","splice","correct_answer","point","_this4","_this4$state","resultRef","components_Result","_this$state2","_this5","_this6","_this$state3","components_Loader","components_Countdown","floating","he","decode","question","Description","vertical","map","item","letter","components_Offline","App","isQuizStart","PATH_BASE","react","components_Header","components_Main","components_Quiz","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","toast","showConfirmButton","onSuccess","console","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cac4d400.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/code.60b1b385.png\";","const NUM_OF_QUESTIONS = [];\r\n\r\nfor (let i = 1; i <= 50; i++) {\r\n  const object = { key: i, text: `${i}`, value: i };\r\n  NUM_OF_QUESTIONS.push(object);\r\n}\r\n\r\nexport default NUM_OF_QUESTIONS;\r\n","import React, { Component } from 'react';\r\nimport { Menu, Button } from 'semantic-ui-react';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { promptEvent: null, appAccepted: false };\r\n\r\n    window.addEventListener('beforeinstallprompt', e => {\r\n      e.preventDefault();\r\n      // console.log('Loooging');\r\n      this.setState({ promptEvent: e });\r\n    });\r\n\r\n    this.installApp = this.installApp.bind(this);\r\n  }\r\n\r\n  installApp() {\r\n    const { promptEvent } = this.state;\r\n    // console.log('Init Func ===', promptEvent);\r\n\r\n    promptEvent.prompt();\r\n    promptEvent.userChoice.then(result => {\r\n      if (result.outcome === 'accepted') {\r\n        // console.log('User accepted the A2HS prompt');\r\n        this.setState({ appAccepted: true });\r\n      } else {\r\n        // console.log('User dismissed the A2HS prompt');\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { promptEvent, appAccepted } = this.state;\r\n\r\n    let isAppInstalled = false;\r\n    if (\r\n      window.matchMedia('(display-mode: standalone)').matches ||\r\n      appAccepted\r\n    ) {\r\n      isAppInstalled = true;\r\n    }\r\n\r\n    return (\r\n      <Menu stackable inverted size=\"massive\">\r\n        <Menu.Item>\r\n          <h1\r\n            style={{\r\n              color: '#2185D0',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            The QuizApp\r\n          </h1>\r\n        </Menu.Item>\r\n\r\n        {promptEvent && !isAppInstalled && (\r\n          <Menu.Menu position=\"right\">\r\n            <Menu.Item>\r\n              <Button\r\n                color=\"teal\"\r\n                content=\"Install App\"\r\n                size=\"big\"\r\n                icon=\"app store\"\r\n                labelPosition=\"left\"\r\n                onClick={this.installApp}\r\n              />\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        )}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\nconst Select = props => (\r\n  <Dropdown\r\n    placeholder={props.text}\r\n    options={props.options}\r\n    fluid\r\n    selection\r\n    onChange={(e, { value }) => props.setValue(value)}\r\n  />\r\n);\r\n\r\nexport default Select;\r\n","const CATEGORIES = [\r\n  {\r\n    key: '0',\r\n    text: 'Any Category',\r\n    value: '0'\r\n  },\r\n  {\r\n    key: '9',\r\n    text: 'General Knowledge',\r\n    value: '9'\r\n  },\r\n  {\r\n    key: '10',\r\n    text: 'Entertainment: Books',\r\n    value: '10'\r\n  },\r\n  {\r\n    key: '11',\r\n    text: 'Entertainment: Films',\r\n    value: '11'\r\n  },\r\n  {\r\n    key: '12',\r\n    text: 'Entertainment: Music',\r\n    value: '12'\r\n  },\r\n  {\r\n    key: '13',\r\n    text: 'Entertainment: Musicals & Theatres',\r\n    value: '13'\r\n  },\r\n  {\r\n    key: '14',\r\n    text: 'Entertainment: Television',\r\n    value: '14'\r\n  },\r\n  {\r\n    key: '15',\r\n    text: 'Entertainment: Video Games',\r\n    value: '15'\r\n  },\r\n  {\r\n    key: '16',\r\n    text: 'Entertainment: Board Games',\r\n    value: '16'\r\n  },\r\n  {\r\n    key: '17',\r\n    text: 'Science & Nature',\r\n    value: '17'\r\n  },\r\n  {\r\n    key: '18',\r\n    text: 'Science: Computers',\r\n    value: '18'\r\n  },\r\n  {\r\n    key: '19',\r\n    text: 'Science: Mathematics',\r\n    value: '19'\r\n  },\r\n  {\r\n    key: '20',\r\n    text: 'Mythology',\r\n    value: '20'\r\n  },\r\n  {\r\n    key: '21',\r\n    text: 'Sports',\r\n    value: '21'\r\n  },\r\n  {\r\n    key: '22',\r\n    text: 'Geography',\r\n    value: '22'\r\n  },\r\n  {\r\n    key: '23',\r\n    text: 'History',\r\n    value: '23'\r\n  },\r\n  {\r\n    key: '24',\r\n    text: 'Politics',\r\n    value: '24'\r\n  },\r\n  {\r\n    key: '25',\r\n    text: 'Arts',\r\n    value: '25'\r\n  },\r\n  {\r\n    key: '26',\r\n    text: 'Celebrities',\r\n    value: '26'\r\n  },\r\n  {\r\n    key: '27',\r\n    text: 'Animals',\r\n    value: '27'\r\n  },\r\n  {\r\n    key: '28',\r\n    text: 'Vehicles',\r\n    value: '28'\r\n  },\r\n  {\r\n    key: '29',\r\n    text: 'Entertainment: Comics',\r\n    value: '29'\r\n  },\r\n  {\r\n    key: '30',\r\n    text: 'Science: Gadgets',\r\n    value: '30'\r\n  },\r\n  {\r\n    key: '31',\r\n    text: 'Entertainment: Japanese Anime & Manga',\r\n    value: '31'\r\n  },\r\n  {\r\n    key: '32',\r\n    text: 'Entertainment: Cartoon & Animations',\r\n    value: '32'\r\n  }\r\n];\r\n\r\nexport default CATEGORIES;\r\n","const COUNTDOWN_TIME = [];\r\n\r\nfor (let i = 1; i <= 60; i++) {\r\n  const object = { key: i, text: `${i}`, value: i };\r\n  COUNTDOWN_TIME.push(object);\r\n}\r\n\r\nexport default COUNTDOWN_TIME;\r\n","const DIFFICULTY = [\r\n  {\r\n    key: '0',\r\n    text: 'Any Difficulty',\r\n    value: '0'\r\n  },\r\n  {\r\n    key: 'easy',\r\n    text: 'Easy',\r\n    value: 'easy'\r\n  },\r\n  {\r\n    key: 'medium',\r\n    text: 'Medium',\r\n    value: 'medium'\r\n  },\r\n  {\r\n    key: 'hard',\r\n    text: 'Hard',\r\n    value: 'hard'\r\n  }\r\n];\r\n\r\nexport default DIFFICULTY;\r\n","const QUESTIONS_TYPE = [\r\n  {\r\n    key: '0',\r\n    text: 'Any Type',\r\n    value: '0'\r\n  },\r\n  {\r\n    key: 'multiple',\r\n    text: 'Multiple Choice',\r\n    value: 'multiple'\r\n  },\r\n  {\r\n    key: 'boolean',\r\n    text: 'True / False',\r\n    value: 'boolean'\r\n  }\r\n];\r\n\r\nexport default QUESTIONS_TYPE;\r\n","import React, { Component } from 'react';\r\nimport { Container, Segment, Item, Divider, Button } from 'semantic-ui-react';\r\nimport codeImg from '../../assets/images/code.png';\r\n\r\nimport Select from '../Select';\r\nimport {\r\n  CATEGORIES,\r\n  NUM_OF_QUESTIONS,\r\n  DIFFICULTY,\r\n  QUESTIONS_TYPE,\r\n  COUNTDOWN_TIME\r\n} from '../../constants';\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    this.setCategory = this.setCategory.bind(this);\r\n    this.setNumOfQ = this.setNumOfQ.bind(this);\r\n    this.setDifficulty = this.setDifficulty.bind(this);\r\n    this.setQType = this.setQType.bind(this);\r\n    this.setTime = this.setTime.bind(this);\r\n  }\r\n\r\n  setCategory(category) {\r\n    this.setState({ category });\r\n  }\r\n\r\n  setNumOfQ(numOfQ) {\r\n    this.setState({ numOfQ });\r\n  }\r\n\r\n  setDifficulty(difficulty) {\r\n    this.setState({ difficulty });\r\n  }\r\n\r\n  setQType(type) {\r\n    this.setState({ type });\r\n  }\r\n\r\n  setTime(time) {\r\n    this.setState({ time });\r\n  }\r\n\r\n  render() {\r\n    const { category, numOfQ, difficulty, type, time } = this.state;\r\n    // console.log(category, numOfQ, difficulty, type, time);\r\n\r\n    let allFieldsSelected = false;\r\n    let selectedValues = [];\r\n\r\n    if (category && numOfQ && difficulty && type && time) {\r\n      selectedValues = [category, numOfQ, difficulty, type, time];\r\n      allFieldsSelected = true;\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Segment raised>\r\n          <Item.Group divided>\r\n            <Item>\r\n              <Item.Image src={codeImg} />\r\n              <Item.Content>\r\n                <Item.Header>\r\n                  <h1>Open Trivia Questions</h1>\r\n                </Item.Header>\r\n                <br />\r\n                <Divider />\r\n                <Item.Meta>\r\n                  <Select\r\n                    options={CATEGORIES}\r\n                    setValue={this.setCategory}\r\n                    text=\"Select Quiz Category\"\r\n                  />\r\n                  <br />\r\n                  <Select\r\n                    options={NUM_OF_QUESTIONS}\r\n                    setValue={this.setNumOfQ}\r\n                    text=\"Select No. of Questions\"\r\n                  />\r\n                  <br />\r\n                  <Select\r\n                    options={DIFFICULTY}\r\n                    setValue={this.setDifficulty}\r\n                    text=\"Select Difficulty Level\"\r\n                  />\r\n                  <br />\r\n                  <Select\r\n                    options={QUESTIONS_TYPE}\r\n                    setValue={this.setQType}\r\n                    text=\"Select Questions Type\"\r\n                  />\r\n                  <br />\r\n                  <Select\r\n                    options={COUNTDOWN_TIME}\r\n                    setValue={this.setTime}\r\n                    text=\"Select Countdown Time (In Minutes)\"\r\n                  />\r\n                </Item.Meta>\r\n                <Divider />\r\n                <Item.Extra>\r\n                  {!allFieldsSelected && (\r\n                    <Button\r\n                      primary\r\n                      content=\"Start Quiz\"\r\n                      disabled\r\n                      size=\"big\"\r\n                      icon=\"play\"\r\n                      labelPosition=\"right\"\r\n                    />\r\n                  )}\r\n                  {allFieldsSelected && (\r\n                    <Button\r\n                      primary\r\n                      content=\"Start Quiz\"\r\n                      onClick={() => this.props.startQuiz(selectedValues)}\r\n                      size=\"big\"\r\n                      icon=\"play\"\r\n                      labelPosition=\"right\"\r\n                    />\r\n                  )}\r\n                </Item.Extra>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n        <br />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Container, Message, Icon } from 'semantic-ui-react';\r\n\r\nconst Loader = props => (\r\n  <Container>\r\n    <Message icon size=\"big\">\r\n      <Icon name=\"circle notched\" loading />\r\n      <Message.Content>\r\n        <Message.Header>Just one second</Message.Header>\r\n        {props.text || 'We are fetching that content for you.'}\r\n      </Message.Content>\r\n    </Message>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport { Container, Segment, Label, Header, Button } from 'semantic-ui-react';\r\n\r\nclass Result extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userScore: Number(\r\n        ((props.correctAnswers * 100) / props.totalQuestions).toFixed(2)\r\n      )\r\n    };\r\n\r\n    this.timeConverter = this.timeConverter.bind(this);\r\n  }\r\n\r\n  timeConverter(value) {\r\n    const hours = ('0' + Math.floor((value / 3600000) % 60)).slice(-2);\r\n    const minutes = ('0' + Math.floor((value / 60000) % 60)).slice(-2);\r\n    const seconds = ('0' + (Math.floor((value / 1000) % 60) % 60)).slice(-2);\r\n    // console.log(hours, minutes, seconds);\r\n\r\n    return {\r\n      hours,\r\n      minutes,\r\n      seconds\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { userScore } = this.state;\r\n    const {\r\n      totalQuestions,\r\n      correctAnswers,\r\n      takenTime,\r\n      retakeQuiz,\r\n      backToHome\r\n    } = this.props;\r\n    // console.log(userScore);\r\n\r\n    const result = this.timeConverter(\r\n      takenTime.totalTime - takenTime.timerTime\r\n    );\r\n    const timeTakes = `${result.hours} : ${result.minutes} : ${result.seconds}`;\r\n\r\n    let remarks = 'Sorry, YOU FAILED!';\r\n    if (userScore >= 60) {\r\n      remarks = 'Congratulations, YOU PASSED!';\r\n    }\r\n\r\n    const calcGrade = parseInt(userScore);\r\n    let grade;\r\n\r\n    if (calcGrade >= 97) {\r\n      grade = 'A+';\r\n    } else if (calcGrade >= 93 && calcGrade <= 96) {\r\n      grade = 'A';\r\n    } else if (calcGrade >= 90 && calcGrade <= 92) {\r\n      grade = 'A-';\r\n    } else if (calcGrade >= 87 && calcGrade <= 89) {\r\n      grade = 'B+';\r\n    } else if (calcGrade >= 83 && calcGrade <= 86) {\r\n      grade = 'B';\r\n    } else if (calcGrade >= 80 && calcGrade <= 82) {\r\n      grade = 'B-';\r\n    } else if (calcGrade >= 77 && calcGrade <= 79) {\r\n      grade = 'C+';\r\n    } else if (calcGrade >= 73 && calcGrade <= 76) {\r\n      grade = 'C';\r\n    } else if (calcGrade >= 70 && calcGrade <= 72) {\r\n      grade = 'C-';\r\n    } else if (calcGrade >= 67 && calcGrade <= 69) {\r\n      grade = 'D+';\r\n    } else if (calcGrade >= 63 && calcGrade <= 66) {\r\n      grade = 'D';\r\n    } else if (calcGrade >= 60 && calcGrade <= 62) {\r\n      grade = 'D-';\r\n    } else if (calcGrade < 60) {\r\n      grade = 'F';\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Segment raised>\r\n            <Label attached=\"top\" size=\"huge\">\r\n              Result\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <Header as=\"h1\" textAlign=\"center\" block>\r\n              {remarks}\r\n            </Header>\r\n            <Header as=\"h2\" textAlign=\"center\" block>\r\n              Grade: {grade}\r\n            </Header>\r\n            <Header as=\"h3\" textAlign=\"center\" block>\r\n              Total Questions: {totalQuestions}\r\n            </Header>\r\n            <Header as=\"h3\" textAlign=\"center\" block>\r\n              Correct Answers: {correctAnswers}\r\n            </Header>\r\n            <Header as=\"h3\" textAlign=\"center\" block>\r\n              Your Score: {userScore}%\r\n            </Header>\r\n            <Header as=\"h3\" textAlign=\"center\" block>\r\n              Passing Score: 60%\r\n            </Header>\r\n            <Header as=\"h3\" textAlign=\"center\" block>\r\n              Time Takes: {timeTakes}\r\n            </Header>\r\n            <div style={{ marginTop: 35 }}>\r\n              <Button\r\n                primary\r\n                content=\"Retake Quiz\"\r\n                onClick={retakeQuiz}\r\n                size=\"big\"\r\n                icon=\"redo\"\r\n                labelPosition=\"right\"\r\n                style={{ marginRight: 15, marginBottom: 8 }}\r\n              />\r\n              <Button\r\n                color=\"teal\"\r\n                content=\"Back to Home\"\r\n                onClick={backToHome}\r\n                size=\"big\"\r\n                icon=\"home\"\r\n                labelPosition=\"right\"\r\n                style={{ marginBottom: 8 }}\r\n              />\r\n            </div>\r\n          </Segment>\r\n          <br />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React, { Component } from 'react';\r\nimport { Button, Popup } from 'semantic-ui-react';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Countdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const countdownTime = props.countdownTime * 60000;\r\n\r\n    this.state = {\r\n      timerStart: 0,\r\n      timerTime: countdownTime,\r\n      totalTime: countdownTime\r\n    };\r\n  }\r\n\r\n  startTimer() {\r\n    this.timer = setInterval(() => {\r\n      // const { timerTime } = this.state;\r\n      // console.log(timerTime);\r\n      const newTime = this.state.timerTime - 1000;\r\n\r\n      if (newTime >= 0) {\r\n        this.setState({\r\n          timerTime: newTime\r\n        });\r\n      } else {\r\n        clearInterval(this.timer);\r\n        Swal.fire({\r\n          title: 'YOUR TIME IS UP',\r\n          type: 'info',\r\n          timer: 5000,\r\n          onClose: () => {\r\n            this.props.timesUp();\r\n          }\r\n        });\r\n      }\r\n    }, 980);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.startTimer();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n    const { timerTime, totalTime } = this.state;\r\n    this.props.timeAmount(timerTime, totalTime);\r\n  }\r\n\r\n  render() {\r\n    const { timerTime } = this.state;\r\n\r\n    const hours = ('0' + Math.floor((timerTime / 3600000) % 60)).slice(-2);\r\n    const minutes = ('0' + Math.floor((timerTime / 60000) % 60)).slice(-2);\r\n    const seconds = ('0' + (Math.floor((timerTime / 1000) % 60) % 60)).slice(\r\n      -2\r\n    );\r\n\r\n    return (\r\n      <Button.Group size=\"massive\" basic floated=\"right\">\r\n        <Popup\r\n          content=\"Hours\"\r\n          trigger={<Button active>{hours}</Button>}\r\n          position=\"bottom left\"\r\n        />\r\n        <Popup\r\n          content=\"Minutes\"\r\n          trigger={<Button active>{minutes}</Button>}\r\n          position=\"bottom left\"\r\n        />\r\n        <Popup\r\n          content=\"Seconds\"\r\n          trigger={<Button active>{seconds}</Button>}\r\n          position=\"bottom left\"\r\n        />\r\n      </Button.Group>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countdown;\r\n","import React from 'react';\r\nimport { Container, Segment, Header, Icon } from 'semantic-ui-react';\r\n\r\nconst Offline = () => (\r\n  <Container>\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"unlink\" />\r\n        <br />\r\n        It looks like you're offline, Please check your internet connection.\r\n      </Header>\r\n    </Segment>\r\n  </Container>\r\n);\r\n\r\nexport default Offline;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Item,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  Message,\r\n  Menu,\r\n  Header\r\n} from 'semantic-ui-react';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Loader from '../Loader';\r\nimport Result from '../Result';\r\nimport Countdown from '../Countdown';\r\nimport Offline from '../Offline';\r\n\r\nimport he from 'he';\r\n\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      quizData: null,\r\n      isLoading: true,\r\n      questionIndex: 0,\r\n      correctAnswers: 0,\r\n      userSlectedAns: null,\r\n      quizIsCompleted: false,\r\n      isOffline: false\r\n    };\r\n\r\n    this.takenTime = undefined;\r\n\r\n    this.getRandomNumber = this.getRandomNumber.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n    this.handleNext = this.handleNext.bind(this);\r\n    this.timesUp = this.timesUp.bind(this);\r\n    this.timeAmount = this.timeAmount.bind(this);\r\n    this.renderResult = this.renderResult.bind(this);\r\n    this.retakeQuiz = this.retakeQuiz.bind(this);\r\n    this.startNewQuiz = this.startNewQuiz.bind(this);\r\n    this.resolveError = this.resolveError.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { API } = this.props;\r\n    // console.log(API);\r\n\r\n    fetch(API)\r\n      .then(respone => respone.json())\r\n      .then(result => setTimeout(() => this.setData(result.results), 1000))\r\n      .catch(error => setTimeout(() => this.resolveError(error), 1000));\r\n  }\r\n\r\n  resolveError(error) {\r\n    if (!navigator.onLine) {\r\n      // console.log('Connection problem');\r\n      this.setState({ isOffline: true });\r\n    } else {\r\n      // console.log('API problem ==> ', error);\r\n      this.setState({ isOffline: true });\r\n    }\r\n  }\r\n\r\n  getRandomNumber() {\r\n    const min = Math.ceil(0);\r\n    const max = Math.floor(3);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  setData(results) {\r\n    // console.log(results);\r\n\r\n    if (results.length === 0) {\r\n      const message =\r\n        \"The API doesn't have enough questions for your query<br />\" +\r\n        '(ex. Asking for 50 questions in a category that only has 20).' +\r\n        '<br /><br />Please change number of questions, difficulty level ' +\r\n        'or type of questions.';\r\n\r\n      return Swal.fire({\r\n        title: 'Oops...',\r\n        html: message,\r\n        type: 'error',\r\n        timer: 5000,\r\n        onClose: () => {\r\n          this.props.backToHome();\r\n        }\r\n      });\r\n    }\r\n\r\n    const quizData = results;\r\n    const { questionIndex } = this.state;\r\n    const outPut = this.getRandomNumber();\r\n    const options = [...quizData[questionIndex].incorrect_answers];\r\n    options.splice(outPut, 0, quizData[questionIndex].correct_answer);\r\n\r\n    this.setState({ quizData, isLoading: false, options, outPut });\r\n  }\r\n\r\n  handleItemClick(e, { name }) {\r\n    this.setState({ userSlectedAns: name });\r\n  }\r\n\r\n  handleNext() {\r\n    const {\r\n      userSlectedAns,\r\n      quizData,\r\n      questionIndex,\r\n      correctAnswers\r\n    } = this.state;\r\n\r\n    let point = 0;\r\n    if (userSlectedAns === quizData[questionIndex].correct_answer) {\r\n      point = 1;\r\n    }\r\n\r\n    if (questionIndex === quizData.length - 1) {\r\n      this.setState({\r\n        correctAnswers: correctAnswers + point,\r\n        userSlectedAns: null,\r\n        isLoading: true,\r\n        quizIsCompleted: true,\r\n        questionIndex: 0,\r\n        options: null\r\n      });\r\n      return false;\r\n    }\r\n\r\n    const outPut = this.getRandomNumber();\r\n\r\n    const options = [...quizData[questionIndex + 1].incorrect_answers];\r\n    options.splice(outPut, 0, quizData[questionIndex + 1].correct_answer);\r\n    this.setState({\r\n      correctAnswers: correctAnswers + point,\r\n      questionIndex: questionIndex + 1,\r\n      userSlectedAns: null,\r\n      options,\r\n      outPut\r\n    });\r\n  }\r\n\r\n  timesUp() {\r\n    this.setState({\r\n      userSlectedAns: null,\r\n      isLoading: true,\r\n      quizIsCompleted: true,\r\n      questionIndex: 0,\r\n      options: null\r\n    });\r\n  }\r\n\r\n  timeAmount(timerTime, totalTime) {\r\n    this.takenTime = {\r\n      timerTime,\r\n      totalTime\r\n    };\r\n  }\r\n\r\n  renderResult() {\r\n    setTimeout(() => {\r\n      const { quizData, correctAnswers } = this.state;\r\n      const { backToHome } = this.props;\r\n\r\n      const resultRef = (\r\n        <Result\r\n          totalQuestions={quizData.length}\r\n          correctAnswers={correctAnswers}\r\n          retakeQuiz={this.retakeQuiz}\r\n          backToHome={backToHome}\r\n          takenTime={this.takenTime}\r\n        />\r\n      );\r\n\r\n      this.setState({ resultRef });\r\n    }, 2000);\r\n  }\r\n\r\n  retakeQuiz() {\r\n    // console.log('Retake quiz func');\r\n    const { quizData, questionIndex } = this.state;\r\n    const outPut = this.getRandomNumber();\r\n    const options = [...quizData[questionIndex].incorrect_answers];\r\n    options.splice(outPut, 0, quizData[questionIndex].correct_answer);\r\n\r\n    this.setState({\r\n      correctAnswers: 0,\r\n      quizIsCompleted: false,\r\n      startNewQuiz: true,\r\n      options,\r\n      outPut\r\n    });\r\n  }\r\n\r\n  startNewQuiz() {\r\n    setTimeout(() => {\r\n      this.setState({ isLoading: false, startNewQuiz: false, resultRef: null });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      quizData,\r\n      questionIndex,\r\n      options,\r\n      // outPut,\r\n      userSlectedAns,\r\n      isLoading,\r\n      // correctAnswers,\r\n      quizIsCompleted,\r\n      resultRef,\r\n      startNewQuiz,\r\n      isOffline\r\n    } = this.state;\r\n\r\n    // console.log(userSlectedAns);\r\n    // console.log(questionIndex, outPut);\r\n    // console.log('Score ==>', correctAnswers);\r\n\r\n    if (quizIsCompleted && !resultRef) {\r\n      this.renderResult();\r\n      // console.log('Routing to result');\r\n    }\r\n\r\n    if (startNewQuiz) {\r\n      this.startNewQuiz();\r\n    }\r\n\r\n    return (\r\n      <Item.Header>\r\n        {!isOffline && !quizIsCompleted && isLoading && <Loader />}\r\n        {!isOffline && !isLoading && (\r\n          <Container>\r\n            <Segment raised>\r\n              <Item.Group divided>\r\n                <Item>\r\n                  <Item.Content>\r\n                    <Item.Extra>\r\n                      <Header as=\"h1\" block floated=\"left\">\r\n                        <Icon name=\"info circle\" />\r\n                        <Header.Content>\r\n                          {`Question No.${questionIndex + 1} of ${\r\n                            quizData.length\r\n                          }`}\r\n                        </Header.Content>\r\n                      </Header>\r\n                      <Countdown\r\n                        countdownTime={this.props.countdownTime}\r\n                        timesUp={this.timesUp}\r\n                        timeAmount={this.timeAmount}\r\n                      />\r\n                    </Item.Extra>\r\n                    <br />\r\n                    <Item.Meta>\r\n                      <Message size=\"huge\" floating>\r\n                        <b>{`Q. ${he.decode(\r\n                          quizData[questionIndex].question\r\n                        )}`}</b>\r\n                      </Message>\r\n                      <br />\r\n                      <Item.Description>\r\n                        <h3>Please choose one of the following answers:</h3>\r\n                      </Item.Description>\r\n                      <Divider />\r\n                      <Menu vertical fluid size=\"massive\">\r\n                        {options.map((item, i) => {\r\n                          let letter;\r\n                          switch (i) {\r\n                            case 0:\r\n                              letter = 'A.';\r\n                              break;\r\n                            case 1:\r\n                              letter = 'B.';\r\n                              break;\r\n                            case 2:\r\n                              letter = 'C.';\r\n                              break;\r\n                            case 3:\r\n                              letter = 'D.';\r\n                              break;\r\n                            default:\r\n                              letter = i;\r\n                              break;\r\n                          }\r\n                          return (\r\n                            <Menu.Item\r\n                              key={item}\r\n                              name={item}\r\n                              active={userSlectedAns === item}\r\n                              onClick={this.handleItemClick}\r\n                            >\r\n                              <b style={{ marginRight: '8px' }}>{letter}</b>\r\n                              {he.decode(item)}\r\n                            </Menu.Item>\r\n                          );\r\n                        })}\r\n                      </Menu>\r\n                    </Item.Meta>\r\n                    <Divider />\r\n                    <Item.Extra>\r\n                      {!userSlectedAns && (\r\n                        <Button\r\n                          primary\r\n                          content=\"Next\"\r\n                          floated=\"right\"\r\n                          disabled\r\n                          size=\"big\"\r\n                          icon=\"right chevron\"\r\n                          labelPosition=\"right\"\r\n                        />\r\n                      )}\r\n                      {userSlectedAns && (\r\n                        <Button\r\n                          primary\r\n                          content=\"Next\"\r\n                          onClick={this.handleNext}\r\n                          floated=\"right\"\r\n                          size=\"big\"\r\n                          icon=\"right chevron\"\r\n                          labelPosition=\"right\"\r\n                        />\r\n                      )}\r\n                    </Item.Extra>\r\n                  </Item.Content>\r\n                </Item>\r\n              </Item.Group>\r\n            </Segment>\r\n            <br />\r\n          </Container>\r\n        )}\r\n        {quizIsCompleted && !resultRef && (\r\n          <Loader text=\"Getting your result.\" />\r\n        )}\r\n        {quizIsCompleted && resultRef}\r\n        {isOffline && <Offline />}\r\n      </Item.Header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport Header from '../Header';\r\nimport Main from '../Main';\r\nimport Loader from '../Loader';\r\nimport Quiz from '../Quiz';\r\n\r\nimport { PATH_BASE, AMOUNT, CATEGORY, DIFFICULTY, TYPE } from '../../api';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isQuizStart: false,\r\n      API: null,\r\n      countdownTime: null,\r\n      isLoading: false\r\n    };\r\n\r\n    this.startQuiz = this.startQuiz.bind(this);\r\n    this.backToHome = this.backToHome.bind(this);\r\n  }\r\n\r\n  startQuiz(selectedValues) {\r\n    // console.log(selectedValues);\r\n\r\n    const API = `${PATH_BASE + AMOUNT + selectedValues[1]}&${CATEGORY +\r\n      selectedValues[0]}&${DIFFICULTY + selectedValues[2]}&${TYPE +\r\n      selectedValues[3]}`;\r\n\r\n    this.setState({ isQuizStart: true, API, countdownTime: selectedValues[4] });\r\n  }\r\n\r\n  backToHome() {\r\n    this.setState({ isLoading: true });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isLoading: false,\r\n        isQuizStart: false,\r\n        API: null,\r\n        countdownTime: null\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const { isQuizStart, API, countdownTime, isLoading } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header />\r\n        {!isLoading && !isQuizStart && <Main startQuiz={this.startQuiz} />}\r\n        {!isLoading && isQuizStart && (\r\n          <Quiz\r\n            API={API}\r\n            countdownTime={countdownTime}\r\n            backToHome={this.backToHome}\r\n          />\r\n        )}\r\n        {isLoading && <Loader />}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const PATH_BASE = 'https://opentdb.com/api.php?';\r\n\r\nconst AMOUNT = 'amount=';\r\nconst CATEGORY = 'category=';\r\nconst DIFFICULTY = 'difficulty=';\r\nconst TYPE = 'type=';\r\n\r\nexport { PATH_BASE, AMOUNT, CATEGORY, DIFFICULTY, TYPE };\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // console.log(\r\n          //   'This web app is being served cache-first by a service worker.'\r\n          // );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              // console.log(\r\n              //   'New content is available and will be used when all ' +\r\n              //     'tabs for this page are closed.'\r\n              // );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              // console.log('Content is cached for offline use.');\r\n              Swal.fire({\r\n                toast: 'true',\r\n                position: 'bottom',\r\n                type: 'success',\r\n                title: 'App is ready to work offline.',\r\n                showConfirmButton: false,\r\n                timer: 6000\r\n              });\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // console.log(\r\n      //   'No internet connection found. App is running in offline mode.'\r\n      // );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}